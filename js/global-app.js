// Í∏ÄÎ°úÎ≤å ÎéÖÍ∏∞Ïó¥ Ï∂îÏ†Å ÏãúÏä§ÌÖú

// Ï†ÑÏó≠ Î≥ÄÏàò
let allPlacesData = [];
let currentMarkers = [];
let markerClusterGroup;
let map;
let currentLang = 'en';
let currentCountry = 'bangladesh';
let translations = {};

// Íµ≠Í∞Ä Ï†ïÎ≥¥
const COUNTRIES = {
    'bangladesh': {
        name: 'Bangladesh',
        center: [23.6850, 90.3563],
        zoom: 7,
        languages: ['en', 'bn'],
        localLang: 'bn',
        localName: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂',
        flag: 'üáßüá©'
    },
    'nigeria': {
        name: 'Nigeria',
        center: [9.0820, 8.6753],
        zoom: 6,
        languages: ['en', 'ha'],
        localLang: 'ha',
        localName: 'Najeriya',
        flag: 'üá≥üá¨'
    },
    'brazil': {
        name: 'Brazil',
        center: [-14.2350, -51.9253],
        zoom: 4,
        languages: ['pt', 'en'],
        localLang: 'pt',
        localName: 'Brasil',
        flag: 'üáßüá∑'
    },
    'thailand': {
        name: 'Thailand',
        center: [15.8700, 100.9925],
        zoom: 6,
        languages: ['th', 'en'],
        localLang: 'th',
        localName: '‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢',
        flag: 'üáπüá≠'
    },
    'indonesia': {
        name: 'Indonesia',
        center: [-0.7893, 113.9213],
        zoom: 5,
        languages: ['id', 'en'],
        localLang: 'id',
        localName: 'Indonesia',
        flag: 'üáÆüá©'
    }
    // ÎÇòÎ®∏ÏßÄ Íµ≠Í∞ÄÎì§ÎèÑ Ï∂îÍ∞Ä...
};

// Firebase ÏÑ§Ï†ï
const firebaseConfig = {
    // Ïó¨Í∏∞Ïóê Firebase ÏÑ§Ï†ï ÎÑ£Í∏∞
};

// Firebase Ï¥àÍ∏∞Ìôî
firebase.initializeApp(firebaseConfig);
const db = firebase.firestore();

// ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî
function initializeMap() {
    map = L.map('map').setView(COUNTRIES[currentCountry].center, COUNTRIES[currentCountry].zoom);
    
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '¬© OpenStreetMap contributors'
    }).addTo(map);
    
    // ÎßàÏª§ ÌÅ¥Îü¨Ïä§ÌÑ∞ Í∑∏Î£π ÏÉùÏÑ±
    markerClusterGroup = L.markerClusterGroup({
        maxClusterRadius: 50,
        spiderfyOnMaxZoom: true
    });
    map.addLayer(markerClusterGroup);
    
    console.log("üó∫Ô∏è Í∏ÄÎ°úÎ≤å ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî ÏôÑÎ£å");
}

// Íµ≠Í∞Ä Î≥ÄÍ≤Ω
function switchCountry(countryCode) {
    currentCountry = countryCode;
    const country = COUNTRIES[countryCode];
    
    if (!country) return;
    
    // ÏßÄÎèÑ Ï§ëÏã¨ Ïù¥Îèô
    map.setView(country.center, country.zoom);
    
    // Íµ≠Í∞ÄÎ™Ö ÏóÖÎç∞Ïù¥Ìä∏
    document.getElementById('currentCountryName').textContent = country.name;
    
    // ÌòÑÏßÄ Ïñ∏Ïñ¥ Î≤ÑÌäº ÏóÖÎç∞Ïù¥Ìä∏
    const localBtn = document.getElementById('localLangBtn');
    localBtn.textContent = country.localName.substring(0, 3);
    localBtn.setAttribute('data-lang', country.localLang);
    
    // Ìï¥Îãπ Íµ≠Í∞Ä Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    loadCountryData(countryCode);
    
    console.log(`üåç ${country.name}Î°ú Ï†ÑÌôò ÏôÑÎ£å`);
}

// Íµ≠Í∞ÄÎ≥Ñ Îç∞Ïù¥ÌÑ∞ Î°úÎìú
function loadCountryData(countryCode) {
    document.getElementById('loading').style.display = 'block';
    
    // FirestoreÏóêÏÑú Ìï¥Îãπ Íµ≠Í∞Ä Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    db.collection('global_locations')
        .where('country', '==', countryCode)
        .get()
        .then(snapshot => {
            allPlacesData = [];
            
            snapshot.forEach(doc => {
                const data = doc.data();
                if (data.lat && data.lng) {
                    allPlacesData.push(data);
                }
            });
            
            console.log(`üìä ${countryCode}: ${allPlacesData.length}Í∞ú ÏãúÏÑ§ Î°úÎìú`);
            
            // ÎßàÏª§ ÌëúÏãú
            filterPlaces('all');
            
            // Î°úÎî© Ïà®Í∏∞Í∏∞
            document.getElementById('loading').style.display = 'none';
            
            // ÌïÑÌÑ∞ Î≤ÑÌäº Í∞úÏàò ÏóÖÎç∞Ïù¥Ìä∏
            updateFilterCounts();
        })
        .catch(error => {
            console.error('Îç∞Ïù¥ÌÑ∞ Î°úÎìú Ïò§Î•ò:', error);
            document.getElementById('loading').style.display = 'none';
        });
}

// Ïª§Ïä§ÌÖÄ ÏïÑÏù¥ÏΩò ÏÉùÏÑ±
function getCustomIcon(type) {
    const iconConfigs = {
        'vaccine': { html: 'üíâ', color: '#2ecc71' },
        'blood_test': { html: 'ü©∏', color: '#9b59b6' },
        'aid': { html: '‚õëÔ∏è', color: '#f39c12' },
        'dengue_center': { html: 'üè•', color: '#e74c3c' }
    };
    
    const config = iconConfigs[type] || iconConfigs['dengue_center'];
    
    return L.divIcon({
        html: config.html,
        className: 'custom-marker',
        iconSize: [30, 30],
        iconAnchor: [15, 15],
        popupAnchor: [0, -15]
    });
}

// ÌïÑÌÑ∞ÎßÅ
function filterPlaces(type) {
    markerClusterGroup.clearLayers();
    
    const filteredData = type === 'all' ? 
        allPlacesData : 
        allPlacesData.filter(place => place.type === type);
    
    filteredData.forEach(place => {
        const icon = getCustomIcon(place.type);
        const marker = L.marker([place.lat, place.lng], {icon: icon})
            .bindPopup(`
                <b>${place.name}</b><br>
                ${place.address}<br>
                <small>${place.type}</small>
            `);
        markerClusterGroup.addLayer(marker);
    });
    
    // ÌïÑÌÑ∞ Î≤ÑÌäº ÌôúÏÑ±Ìôî
    document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-filter="${type}"]`).classList.add('active');
    
    console.log(`üîç ${type} ÌïÑÌÑ∞: ${filteredData.length}Í∞ú ÌëúÏãú`);
}

// ÌïÑÌÑ∞ Í∞úÏàò ÏóÖÎç∞Ïù¥Ìä∏
function updateFilterCounts() {
    const counts = {
        'all': allPlacesData.length,
        'vaccine': allPlacesData.filter(p => p.type === 'vaccine').length,
        'blood_test': allPlacesData.filter(p => p.type === 'blood_test').length,
        'aid': allPlacesData.filter(p => p.type === 'aid').length,
        'dengue_center': allPlacesData.filter(p => p.type === 'dengue_center').length
    };
    
    Object.keys(counts).forEach(type => {
        const btn = document.querySelector(`[data-filter="${type}"]`);
        if (btn) {
            const text = btn.textContent.split('(')[0].trim();
            btn.textContent = `${text} (${counts[type]})`;
        }
    });
}

// Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà
document.addEventListener('DOMContentLoaded', () => {
    console.log("üåç Global Dengue Tracker ÏãúÏûë");
    
    // ÏßÄÎèÑ Ï¥àÍ∏∞Ìôî
    initializeMap();
    
    // Ï¥àÍ∏∞ Íµ≠Í∞Ä Îç∞Ïù¥ÌÑ∞ Î°úÎìú
    loadCountryData(currentCountry);
    
    // Íµ≠Í∞Ä ÏÑ†ÌÉù Ïù¥Î≤§Ìä∏
    document.getElementById('countrySelect').addEventListener('change', (e) => {
        switchCountry(e.target.value);
    });
    
    // ÌïÑÌÑ∞ Î≤ÑÌäº Ïù¥Î≤§Ìä∏
    document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const filter = btn.getAttribute('data-filter');
            filterPlaces(filter);
        });
    });
    
    // Ïñ∏Ïñ¥ Î≤ÑÌäº Ïù¥Î≤§Ìä∏
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const lang = btn.getAttribute('data-lang');
            changeLanguage(lang);
        });
    });
});

// Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω (Í∏∞Î≥∏ Íµ¨Ï°∞)
function changeLanguage(lang) {
    currentLang = lang;
    
    // Ïñ∏Ïñ¥ Î≤ÑÌäº ÌôúÏÑ±Ìôî
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-lang="${lang}"]`).classList.add('active');
    
    console.log(`üåê Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω: ${lang}`);
}